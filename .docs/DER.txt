Table materias {
  uuid uuid [pk]
  nombre varchar [not null, unique]
}

Table curso {
  uuid uuid [pk]
  uuid_materia varchar [not null]
  examen varchar
  cantidad_max integer [default: 35]
  cantidad_min integer [default: 10]
  desde timestamp [not null]
  hasta timestamp [not null]
  created_at timestamp [default: `now()`]
}

Table correlativas {
  uuid varchar [pk]
  uuid_materia varchar [not null]              
  uuid_materia_correlativa varchar [not null] 
}

Table inscripciones {
  uuid uuid [pk]
  uuid_curso uuid [not null]
  uuid_alumno uuid [not null]
  estado varchar [note: 'ej.: pendiente, confirmada, confirmada']
  rol varchar [note: 'ej.: titular, adjunto, ayudante, alumno']
  created_at timestamp [default: `now()`]
}

Table users {
  uuid uuid [pk]
  name varchar
  email varchar [unique]
  created_at timestamp [default: `now()`]
}

Table docentes_materia {
  uuid uuid [pk]
  uuid_docente uuid [not null]
  uuid_materia uuid [not null]
}

Ref: materias.uuid < curso.uuid_materia [delete: restrict, update: cascade]
Ref: curso.uuid < inscripciones.uuid_curso [delete: cascade, update: cascade]
Ref: users.uuid < inscripciones.uuid_alumno [delete: restrict, update: cascade]
Ref: materias.uuid < correlativas.uuid_materia [delete: cascade, update: cascade]
Ref: materias.uuid < correlativas.uuid_materia_correlativa [delete: cascade, update: cascade]

Ref: users.uuid < docentes_materia.uuid_docente [delete: cascade, update: cascade]
Ref: materias.uuid < docentes_materia.uuid_materia [delete: restrict, update: cascade]

Enum wallet_status {
  active
  blocked
  closed
}

Enum txn_type {
  topup
  payment
  transfer
  refund
  payout
}

Enum txn_status {
  pending
  posted
  failed
  reversed
}

Table wallets {
  uuid uuid [pk]
  user_id uuid [not null]
  currency char(3) [not null] // ISO-4217, ej: "ARS","USD"
  status wallet_status [not null, default: 'active']
  created_at timestamp [default: `now()`]

  Indexes { (user_id, currency) [unique] }
}

Table transactions {
  uuid uuid [pk]
  wallet_uuid uuid [not null]
  type txn_type [not null]
  status txn_status [not null, default: 'pending']
  amount bigint [not null]
  currency char(3) [not null, note: 'esto deberia ser igual al wallet.currency']
  description varchar
  created_at timestamp [default: `now()`]
  posted_at timestamp

}

// RELACIONES
Ref: users.uuid < wallets.user_id [delete: cascade, update: cascade]
Ref: wallets.uuid < transactions.wallet_uuid [delete: restrict, update: cascade]

