name: Deploy to DigitalOcean

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Deploy Info
        run: |
          echo "Deployed by: ${{ github.actor }}"
          echo "Target branch: ${{ github.ref_name }}"

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Add SSH key with passphrase
        run: |
          echo "${{ secrets.DO_SSH_KEY }}" > private_key
          chmod 600 private_key
          eval "$(ssh-agent -s)"
          ssh-add private_key

      - name: Install & Build
        run: |
          npm ci
          npm run build

      - name: Build Docker image
        run: docker build -t core-backend:latest .

      # ðŸ”¹ 2. Exportar imagen como tar.gz
      - name: Save image as tar
        run: docker save core-backend:latest | gzip > core-backend.tar.gz

      # ðŸ”¹ 3. Copiar la imagen al server
      - name: Copy image to server
        run: scp -o StrictHostKeyChecking=no -i private_key core-backend.tar.gz ${{ secrets.DO_CONNECTION_URI }}:~/core-backend.tar.gz

      # ðŸ”¹ 4. Cargar imagen y levantar contenedor en el server
      - name: Load and run on server
        env:
          ENV_FILE_CONTENT: ${{ secrets.ENV_FILE_CONTENT }}
        run: |
          ssh -o StrictHostKeyChecking=no -i private_key ${{ secrets.DO_CONNECTION_URI }} "
            echo \"${ENV_FILE_CONTENT}\" > ~/core-backend.env
            docker load < ~/core-backend.tar.gz
            cd ~/core-backend 
            docker compose up -d
          "

      - name: Clean up SSH key
        if: always()
        run: |
          eval "$(ssh-agent -s)"
          ssh-add -D
          rm -f private_key
