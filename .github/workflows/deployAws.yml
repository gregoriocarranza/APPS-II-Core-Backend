name: Deploy to AWS

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Deploy Info
        run: |
          echo "Deployed by: ${{ github.actor }}"
          echo "Target branch: ${{ github.ref_name }}"
          echo "Repository: ${{ github.repository }}"

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Add SSH key with passphrase
        run: |
          echo "${{ secrets.DO_SSH_KEY }}" > private_key
          chmod 600 private_key
          eval "$(ssh-agent -s)"
          ssh-add private_key

      - name: Deploy to AWS server via SSH
        env:
          ENV_FILE_CONTENT: ${{ secrets.ENV_FILE_CONTENT }}
          BRANCH: ${{ github.ref_name }}
          GITHUB_REPO: ${{ github.repository }}
        run: |
          ssh -o StrictHostKeyChecking=no -i private_key ${{ secrets.DO_CONNECTION_URI }} "
            echo '--- Starting deployment on server ---'

            cd ~
            if [ ! -d APPS-II-Core-Backend ]; then
              echo "trying to clon from: ${BRANCH} https://github.com/${GITHUB_REPO}.git"
              git clone -b ${BRANCH} https://github.com/${GITHUB_REPO}.git
            else
              cd APPS-II-Core-Backend
              git fetch origin ${BRANCH}
              git checkout ${BRANCH}
              git pull origin ${BRANCH}
            fi

            cd ~/APPS-II-Core-Backend

            cat > .env <<EOT
            ${ENV_FILE_CONTENT}
            EOT

            echo '✅ .env file created successfully!'
            ls -l .env
            head -n 5 .env

            docker compose build --no-cache
            docker compose up -d --remove-orphans

            echo '✅ Deployment completed successfully!'
          EOF
          "

      - name: Clean up SSH key
        if: always()
        run: |
          eval "$(ssh-agent -s)"
          ssh-add -D
          rm -f private_key
